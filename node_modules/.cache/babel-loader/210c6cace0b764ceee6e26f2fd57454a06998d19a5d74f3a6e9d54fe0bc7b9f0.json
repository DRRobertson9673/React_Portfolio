{"ast":null,"code":"var _jsxFileName = \"/Users/davidrobertson/Bootcamp/__Portfolio/david_robertson_portfolio/src/Components/monitor.js\";\nimport \"../Style/monitor.css\";\nimport monitor from '../Images/Monitor/Monitor.svg';\nimport content from '../Images/Monitor/ContentAll.svg';\nimport screen1 from '../Images/Monitor/Screen1.svg';\nimport screen2 from '../Images/Monitor/Screen2.svg';\nimport screen3 from '../Images/Monitor/Screen3.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitor() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const observer = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        console.log();\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('.contentAnimation');\n        }\n      });\n    });\n    observer.observe(document.querySelector('#content'));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"monitorAnimation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"monitor\",\n      src: monitor,\n      alt: \"monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"content\",\n      src: content,\n      alt: \"content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"screen1\",\n      src: screen1,\n      alt: \"screen1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"screen2\",\n      src: screen2,\n      alt: \"screen2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"screen3\",\n      src: screen3,\n      alt: \"screen3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = Monitor;\nexport default Monitor;\nvar _c;\n$RefreshReg$(_c, \"Monitor\");","map":{"version":3,"names":["monitor","content","screen1","screen2","screen3","jsxDEV","_jsxDEV","Monitor","document","addEventListener","observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","observe","querySelector","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidrobertson/Bootcamp/__Portfolio/david_robertson_portfolio/src/Components/monitor.js"],"sourcesContent":["import \"../Style/monitor.css\"\nimport monitor from '../Images/Monitor/Monitor.svg';\nimport content from '../Images/Monitor/ContentAll.svg';\nimport screen1 from '../Images/Monitor/Screen1.svg';\nimport screen2 from '../Images/Monitor/Screen2.svg';\nimport screen3 from '../Images/Monitor/Screen3.svg';\n\n\nfunction Monitor() {\n\n    document.addEventListener(\"DOMContentLoaded\", function(){\n    const observer = new IntersectionObserver(entries => {\n        // Loop over the entries\n        entries.forEach(entry => {\n          // If the element is visible\n          console.log()\n          if (entry.isIntersecting) {\n            // Add the animation class\n            entry.target.classList.add('.contentAnimation');\n          }\n        });\n      });\n      \n      observer.observe(document.querySelector('#content'));\n    });\n\n\n\n    return (\n        <div id=\"monitorAnimation\">\n            <img id=\"monitor\" src={monitor} alt=\"monitor\" />\n            <img id=\"content\" src={content} alt=\"content\" />\n            <img id=\"screen1\" src={screen1} alt=\"screen1\" />\n            <img id=\"screen2\" src={screen2} alt=\"screen2\" />\n            <img id=\"screen3\" src={screen3} alt=\"screen3\" />\n        </div>\n    );\n}\n\nexport default Monitor;"],"mappings":";AAAA,OAAO,sBAAsB;AAC7B,OAAOA,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,SAASC,OAAOA,CAAA,EAAG;EAEfC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAU;IACxD,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAI;MACjD;MACAA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACvB;QACAC,OAAO,CAACC,GAAG,EAAE;QACb,IAAIF,KAAK,CAACG,cAAc,EAAE;UACxB;UACAH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFV,QAAQ,CAACW,OAAO,CAACb,QAAQ,CAACc,aAAa,CAAC,UAAU,CAAC,CAAC;EACtD,CAAC,CAAC;EAIF,oBACIhB,OAAA;IAAKiB,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACtBlB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAACE,GAAG,EAAEzB,OAAQ;MAAC0B,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDxB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAACE,GAAG,EAAExB,OAAQ;MAACyB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDxB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAACE,GAAG,EAAEvB,OAAQ;MAACwB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDxB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAACE,GAAG,EAAEtB,OAAQ;MAACuB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDxB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAACE,GAAG,EAAErB,OAAQ;MAACsB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9C;AAEd;AAACC,EAAA,GA7BQxB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}